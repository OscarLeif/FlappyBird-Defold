-- [[Lua Script File:  	main_menu.gui_script--]]

local buttons = {"playBtn", "exitBtn"}
local focus_index = 1
local focus_scale = vmath.vector3(1.2, 1.2, 1)
local default_scale = vmath.vector3(1, 1, 1)

local button_neighbors = {
	playBtn = { right = "exitBtn" },
	exitBtn = { left = "playBtn" }
}

-- Declare a local Lua Module Pointer
local anim = require 'main.modules.animateCalls'
local hashes = require 'utils.hashes'

local function OnClickStartGame()
	--for now lets just load the game collection
	msg.post("main:/main#main", "start_game") --collectionName:/Gameobject#componentName
end

local function OnClickExitGame()
	sys.exit(0)
end

local function focus_button(button_id)
	for id, _ in pairs(button_neighbors) do
		local scale = (id == button_id) and focus_scale or default_scale
		gui.set_scale(gui.get_node(id), scale)
	end
end

local function navigate(direction)
	print("navigate should work")
	local new_focus_index = focus_index
	if direction == "up" then
		new_focus_index = focus_index - 1
	elseif direction == "down" then
		new_focus_index = focus_index + 1
	end

	if new_focus_index < 1 then
		new_focus_index = #buttons
	elseif new_focus_index > #buttons then
		new_focus_index = 1
	end

	focus_index = new_focus_index
	focus_button(focus_index)
end

local function press_button()
	local button_id = buttons[focus_index]
	print("Pressed button: " .. button_id)
	-- Add your button press logic here
	if button_id == "playBtn"then
		OnClickStartGame()
	elseif button_id == "exitBtn"then
		OnClickExitGame()
	end
	
end

function init(self)
	msg.post(".", "acquire_input_focus")	
	anim.animateButton1(gui.get_node("playBtn"), 0.4)
	focus_button(focus_index)
end

function on_input(self, action_id, action)

	if action_id == hash("dpad_center") and action.pressed then
		print("DPAD_CENTER pressed")
		-- Handle the DPAD_CENTER action here
	end
	
	if action_id == hash("up") and action.pressed then
		navigate("up")
	elseif action_id == hash("down") and action.pressed then
		navigate("down")
	elseif action_id == hash("left") and action.pressed then
		navigate("left")
	elseif action_id == hash("right") and action.pressed then
		navigate("right")
	elseif action_id == hash("select") and action.pressed then
		press_button()
	end

	if action.pressed and gui.pick_node(gui.get_node("playBtn"), action.x, action.y) then
		anim.animateButtonPress(gui.get_node("playBtn"), 0.1)
		-- gui.play_flipbook(gui.get_node("playBtn"), hash("pressedButton")) --ok pressedButton is an animation from the atlas
	end

	if action.released and gui.pick_node(gui.get_node("playBtn"), action.x, action.y) then
		--gui.play_flipbook(gui.get_node("playBtn"), hash("releasedButton"))
		anim.animateButtonRelease(gui.get_node("playBtn"), 0.2)
		OnClickStartGame()		
	end	

	if action_id == hash("raw") then
		pprint(action.gamepad_buttons)
		pprint(action.gamepad_axis)
		pprint(action.gamepad_hats)
	end
end